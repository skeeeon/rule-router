# Basic rule with top-level field access
- subject: sensors.temperature                    # NATS subject format (dots)
  conditions:
    operator: and
    items:
      - field: temperature
        operator: gt
        value: 30
  action:
    subject: alerts.temperature                   # NATS output subject
    payload: |
      {
        "alert": "High temperature detected!",
        "value": {temperature},        # Message data
        "deviceId": {deviceId},
        "timestamp": "{@timestamp()}",  # System function
        "alertId": "{@uuid7()}",       # Time-ordered UUID
        "correlationId": "{@uuid4()}"  # Random UUID
      }

# Basic rule with nested field access
# Sample message: {"sensor": {"id": "temp001", "reading": 32.5, "location": "bedroom"}}
- subject: sensors.data
  conditions:
    operator: and
    items:
      - field: sensor.reading             # ✅ Nested field access in conditions
        operator: gt
        value: 30
      - field: sensor.location            # ✅ Nested string field
        operator: eq
        value: "bedroom"
  action:
    subject: alerts.bedroom-temperature
    payload: |
      {
        "alert": "High bedroom temperature!",
        "sensor_id": {sensor.id},         # ✅ Nested field in template
        "reading": {sensor.reading},      # ✅ Nested numeric field  
        "location": {sensor.location},    # ✅ Nested string field
        "timestamp": "{@timestamp()}",
        "alertId": "{@uuid7()}"
      }
